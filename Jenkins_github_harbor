def label = "agent-${UUID.randomUUID().toString()}"
def gitBranch = 'master'
def docker_registry = "ghcr.io"  

// 본인 이미지 사용
def imageName = "ghcr.io/heewon00/vue_crud_security"
def git_ops_name = "gitops-kust"
def dir = "frontend"
// 본인 Namespace
def P_NAMESPACE = "devops-slave"
// 본인 slave pvc
def P_SLAVE_PVC = "jenkins-slave-pvc"
// 본인 이메일
def P_EMAIL = "bakipark27@gmail.com"


def TAG = getTag(gitBranch)

// jnlp ghcr.io/shclub/jenkins/jnlp-slave:latest-jdk11 -> jenkins/inbound-agent:latest 변경

podTemplate(label: label, serviceAccount: 'jenkins-admin', namespace: P_NAMESPACE,
    containers: [
        containerTemplate(name: 'docker',image: 'docker',command: 'cat', ttyEnabled: true),
    ],
    volumes: [
        hostPathVolume(hostPath: '/etc/containers' , mountPath: '/var/run/containerd'),
        persistentVolumeClaim(mountPath: '/var/jenkins_home', claimName: P_SLAVE_PVC,readOnly: false),
        ]){    
      
    node(label) {
      stage ('======== Clone repository ========') {
        checkout scm
      }
      stage ('======== Build image ========') {
        app = docker.build("myharbor.apps.211-34-231-93.nip.io/edu/nginx")
      }
      stage ('======== Push image ========') {
        docker.withRegistry('https://myharbor.apps.211-34-231-93.nip.io', 'harbor_ci') {
          app.push("${env.BUILD_NUMBER}")
          app.push("latest")
        }
      }
    }
}

def getTag(branchName){     
    def TAG
    def DATETIME_TAG = new Date().format('yyyyMMddHHmmss')
    TAG = "${DATETIME_TAG}"
    return TAG
}  


